imports
{
import CCO.SourcePos
}

-------------------------------------------------------------------------------
-- Syntax
-------------------------------------------------------------------------------

{

type Label = String

type Var = String
type VarL = [Var]

data IntOp    = Plus | Minus | Times | Div | Modulo
  deriving Show

data BoolOp   = And | Or | Nand | Xor
  deriving Show
data IntComp  = EQ | LT | LTE | GT | GTE
  deriving Show

data IntExpr  = IEInt  Integer
              | IEVar  Var
              | IEOp   IntExpr  IntOp  IntExpr

data BoolExpr = BEBool  Bool
              | BENot   BoolExpr
              | BEOp    BoolExpr  BoolOp    BoolExpr
              | BEInt   IntExpr   IntComp   IntExpr

}

data Proc
  | Proc  name :: {Var}  args :: {VarL}  refs :: {VarL}  body :: Stmnt

type ProcL = [Proc]

data Stmnt
  | Stmnt  pos :: {SourcePos}  t :: Stmnt_

type StmntL = [Stmnt]

data Stmnt_
  | RootSet     procs :: ProcL  ss :: StmntL
  | StmntL      ss :: StmntL
  | Assgn       x :: {Var}  ie :: {IntExpr}
  | IfThen      cond :: {BoolExpr}  body :: Stmnt
  | IfThenElse  cond :: {BoolExpr}  thenBody :: Stmnt  elseBody :: Stmnt
  | While       cond :: {BoolExpr}  body :: Stmnt
  | Skip

